

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Xud</title>
  <subtitle>... ...</subtitle>
  <updated>2022-05-15T23:02:10+08:00</updated>
  <author>
    <name>Xud</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator>
  <rights> Â© 2022 Xud </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Simple water ripple (without RenderTexture and Particle System)</title>
    <link href="http://localhost:4000/posts/RipplesWithoutRenderTexture/" rel="alternate" type="text/html" title="Simple water ripple (without RenderTexture and Particle System)" />
    <published>2022-03-20T17:30:00+08:00</published>
  
    <updated>2022-03-20T17:30:00+08:00</updated>
  
    <id>http://localhost:4000/posts/RipplesWithoutRenderTexture/</id>
    <content src="http://localhost:4000/posts/RipplesWithoutRenderTexture/" />
    <author>
      <name>Xud</name>
    </author>

  
    
    <category term="unity" />
    
  

  
    <summary>
      





      
  The generation of simple water ripples only needs the center position information, and the rest of the artistic effects can be achieved in the shader.

  Since the shader cannot temporarily store the information, the script needs to pass the character position information to the shader.

  (Can the geometry shader store information?)



    Method
    Custom FunctionCustom Function code refe...
    </summary>
  

  </entry>

  
  <entry>
    <title>2D crowd animation using ShaderGraph</title>
    <link href="http://localhost:4000/posts/2DCrowdAnimationShadergraph/" rel="alternate" type="text/html" title="2D crowd animation using ShaderGraph" />
    <published>2022-03-20T17:30:00+08:00</published>
  
    <updated>2022-03-20T17:30:00+08:00</updated>
  
    <id>http://localhost:4000/posts/2DCrowdAnimationShadergraph/</id>
    <content src="http://localhost:4000/posts/2DCrowdAnimationShadergraph/" />
    <author>
      <name>Xud</name>
    </author>

  
    
    <category term="unity" />
    
    <category term="shadergraph" />
    
  

  
    <summary>
      





      
  Through uv combined with animation and other methods to achieve crowds with different states, such as different heights, different colors, different animation playback speeds, different crowd space gaps, etc., and the linerenderer can be used to plan the path.
Limitations: the best effect on the plane, and can not have too much tilt angle



    Implementationuv.x settingInterval setupsprite...
    </summary>
  

  </entry>

</feed>


